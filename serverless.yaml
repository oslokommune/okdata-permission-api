frameworkVersion: ">=1.64.0 <2.0.0"

service: policy-server-poc

provider:
  name: aws
  runtime: python3.7
  memorySize: 1024
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${self:custom.deploymentBucket.${self:provider.stage}, self:custom.deploymentBucket.dev}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  rolePermissionsBoundary: "arn:aws:iam::#{AWS::AccountId}:policy/oslokommune/oslokommune-boundary"
  iamManagedPolicies:
    - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'
  tags:
    GIT_REV: ${git:branch}:${git:sha1}
    VERSION: ${self:custom.version}
  environment:
    GIT_REV: ${git:branch}:${git:sha1}
    STAGE: ${self:provider.stage}
    VERSION: ${self:custom.version}
    SERVICE_NAME: ${self:service}
package:
  exclude:
    - '**/*'
  include:
    - data_downloader/*.py
    - data_uploader/*.py
    - event_stream/*.py
    - metadata/*.py


functions:
  download-data: ${file(serverless/data_downloader/download.yml)}
  upload-data: ${file(serverless/data_uploader/upload.yml)}
  create-event-stream: ${file(serverless/event_stream/create_event_stream.yml)}
  send-events: ${file(serverless/event_stream/send_events.yml)}
  create-dataset: ${file(serverless/metadata/create_dataset.yml)}
  get-dataset: ${file(serverless/metadata/get_dataset.yml)}
  update-dataset: ${file(serverless/metadata/update_dataset.yml)}

plugins:
  - serverless-python-requirements
  - serverless-plugin-git-variables
  - serverless-pseudo-parameters
  - serverless-es-logs
  - serverless-aws-documentation

resources:
  Description: |
    ${self:service} ${git:branch}:${git:sha1}
    ${git:message}

custom:
  version: 0.1.0
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    usePoetry: false
  esLogs:
    endpoint: ${ssm:/dataplatform/shared/logs-elasticsearch-endpoint}
    index: dataplatform-services
    filterPattern: '{ $.function_name = "*" }'
  exportGitVariables: false
  deploymentBucket:
    prod: ok-origo-dataplatform-config-prod
    dev: ok-origo-dataplatform-config-dev
  documentation:
    info:
      version: ${git:sha1}
      title: 'policy-server-poc'
      description: 'Harmless endpoints for testing policy-server-poc'
    models: ${file(serverless/models.yml)}
